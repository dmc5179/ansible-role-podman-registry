---
# tasks file for podman-registry

- name: Install Dependencies
  yum:
    package: "{{ item }}"
  with_items:
    - podman
    - httpd
    - httpd_tools
    - mod_ssl
    - firewalld
    - skopeo

- name: Create the registry directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ registry_dir }}/auth"
    - "{{ registry_dir }}/certs"
    - "{{ registry_dir }}/data"

- name: Generate an OpenSSL private key with a different size (2048 bits)
  openssl_privatekey:
    path: "{{ registry_dir }}/certs/domain.key"
    size: 4096

# TODO: Finish the openssl commands
# openssl req -newkey rsa:4096 -nodes -sha256 -keyout ${REGISTRY_DIR}/certs/domain.key -x509 -days 365 -out ${REGISTRY_DIR}/certs/domain.crt

- name: Add username and password for registry
  htpasswd:
    path: "{{ registry_dir }}/auth/htpasswd"
    name: dummy
    state: present
    password: 'dummy'
    owner: root
    group: root
    mode: 0640

# Make sure to trust the self signed cert we just made
- name: Copy self signed cert to local PKI trust
  copy:
    src: "{{ registry_dir }}/certs/domain.crt"
    dest: '/etc/pki/ca-trust/source/anchors/'
    remote_src: true

- name: update trusted ca redhat
  command: update-ca-trust extract
  when:
    - (ansible_os_family == "RedHat") or
    - (ansible_os_family == "CentOS") or
    - (ansible_os_family == "Fedora")

- name: Enable registry port zone internal
  firewalld:
    port: "{{ registry_port }}/tcp"
    zone: internal
    permanent: true
    immediate: true
    state: enabled

- name: Enable registry port zone public
  firewalld:
    port: "{{ registry_port }}/tcp"
    zone: public
    permanent: true
    immediate: true
    state: enabled

- name: Enable https service
  firewalld:
    service: https
    permanent: true
    immediate: true
    state: enabled

- name: Enable http service
  firewalld:
    service: http
    permanent: true
    immediate: true
    state: enabled

- name: Pull docker registry image
  podman_image:
    name: docker.io/library/registry
    tag: 2
    state: present

# podman run --name registry_server -p ${REGISTRY_PORT}:5000 \
# -v ${REGISTRY_DIR}/data:/var/lib/registry:z \
# -v ${REGISTRY_DIR}/auth:/auth:z \
# -e "REGISTRY_AUTH=htpasswd" \
# -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry" \
# -e "REGISTRY_HTTP_SECRET=ALongRandomSecretForRegistry" \
# -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
# -v ${REGISTRY_DIR}/certs:/certs:z \
# -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt \
# -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key \
# --hostname=${REGISTRY_HOSTNAME} \
# --detach \
# docker.io/library/registry:2

# Configure SELinux to allow containers in systemd services
- name: Set container_manage_cgroup SELinux Boolean
  seboolean:
    name: container_manage_cgroup
    state: true
    persistent: true
  when:
    - (ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS') and
    - (ansible_distribution_major_version == 7)

- name: Install service file for podman registry
  file:
    src: "{{ lookup('files', podman-registry.service) }}"
    dest: /etc/systemd/system/podman-registry.service
    state: present
    owner: root
    group: root
    mode: 0644

- name: Enable podman registry systemd service
  service:
    name: podman-registry
    state: enabled

# Test the connection
# curl -u dummy:dummy https://${REGISTRY_HOSTNAME}:${REGISTRY_PORT}/v2/_catalog
